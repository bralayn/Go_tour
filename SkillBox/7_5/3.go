//Задание 3. Вывод ёлочки
//
//Что нужно сделать
//Усложним задачу рисования: попробуйте вывести ёлочку. В первой строке выведите одну звёздочку,
//во второй — на две больше, в третьей — ещё на две больше, и так до количества строк, указанных пользователем.
//
//Правила вывода ёлочки: она симметрична, количество строк соответствует введённому пользователем.
//
//Советы и рекомендации
//Необходимо сначала выводить пробелы, а затем — звёздочки. Посмотрите, как количество пробелов и звёздочек в каждой
//строке связано с введённым количеством строк и номером текущей строки. Внутри цикла по строкам, скорее всего,
//понадобятся два цикла: один — для вывода пробелов, второй — для вывода звёздочек.
//
//Пример работы программы:
//
//Вывод ёлочки.
//Введите высоту ёлочки:
//5
//    *
//   ***
//  *****
// *******
//*********
package main

import "fmt"

func main() {

	var i, j, height, width int

	fmt.Println("Christmas tree output ")
	fmt.Println("Input the height ")
	fmt.Scan(&height)
	fmt.Println()

	i = 1
	j = 1
	width = height*2 - 1

	for j <= height {

		for i <= width {

			if i > height-j && i < height+j {
				fmt.Print("*")
			} else {
				fmt.Print(" ")
			}
			i++
		}
		fmt.Println()
		j++
		i = 1
	}
}
